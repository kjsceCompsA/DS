// 1411057 A3

#include<stdio.h>
#include<conio.h>
#define MAX 20
struct deque
{
 int arr[MAX];
 int front,rear;
};
void initdeque(struct deque *d);
void insert_rear(struct deque *d);
void insert_front(struct deque *d);
int delete_rear(struct deque *d);
int delete_front(struct deque *d);
void display(struct deque *q);
void initdeque(struct deque *d)
{
 d->front=d->rear=-1;
}
void insert_rear(struct deque *d)
{
 int data;
 printf("\nEnter num");
 scanf("%d",&data);
 if((d->front==0&&d->rear==MAX-1)||(d->front==d->rear+1))
 {
  printf("Deque is full");
  return;
 }
 if(d->front==-1)
 d->front=d->rear=0;
 else
 {
  if(d->rear==MAX-1)
  d->rear=0;
  else
  d->rear++;}
 d->arr[d->rear]=data;
}
void insert_front(struct deque *d)
{
 int a;
 printf("\nEnter num");
 scanf("%d",&a);
 if((d->front==0&&d->rear==MAX-1)||(d->front==d->rear+1))
 {
  printf("\nDeque full");
  return;
 }
 if(d->front==-1)
 {
  d->front=d->rear=0;
 }
 else
 {
  if(d->front==0)
   d->front=MAX-1;
  else
   d->front--;
 }
  d->arr[d->front]=a;
}
int delete_rear(struct deque *d)
{
 int b;
 if(d->front==-1)
 {
  printf("\nDeque is empty");
  return;
 }
 b=d->arr[d->rear];
 if(d->front==d->rear)
 d->front=d->rear=-1;
 else
 {
  if(d->rear==0)
   d->rear=MAX-1;
  else
   d->rear--;
 }
 return b;
}
int delete_front(struct deque *d)
{
 int p;
 if(d->front==-1)
 {
  printf("\nDeque is empty");
  return;
 }
 p=d->arr[d->front];
 if(d->front==d->rear)
  d->front=d->rear=-1;
 else
 {
  if(d->front==MAX-1)
   d->front=0;
  else
   d->front++;
 }
 return p;
}
void display(struct deque *d)
{
 int i,left,right;
 left=d->front;
 right=d->rear;
 if(d->front==-1)
 {
  printf("\nDeque is empty");
  return;
 }
 if(left<=right)
 {
  while(left<=right)
  {printf("%d ",d->arr[left++]);}
 }
 else
 {
  while(left<=MAX-1)
  {printf("%d ",d->arr[left++]);}
  left=0;
  while(left<=right)
  {printf("%d ",d->arr[left++]);}
 }
}
void main()
{
 struct deque d;
 int val,choice,x,ch,y;
 clrscr();
 initdeque(&d);
 printf("\nEnter 1 for input restricted and 2 for output restricted deque\n");
 scanf("%d",&ch);
 if(ch==1)
 {
  do
  {
   printf("\n1.Insert_front\n2.Delete_rear\n3.Delete_front");
   printf("\n4.Display\n5.Exit\nEnter choice ");
   scanf("%d",&choice);
   switch(choice)
   {
    case 1:insert_front(&d);
	   break;
    case 2:val=delete_rear(&d);
	   printf("\nDeleted value is %d ",val);
	   break;
    case 3:x=delete_front(&d);
	   printf("\nDeleted value is %d ",x);
	   break;
    case 4:display(&d);
	   printf("\nDeque displayed ");
	   break;
   }
  }while(choice!=5);
 }
 else
 {
  do
  {
   printf("\n1.Insert_front\n2.Insert_rear\n3.Delete_front");
   printf("\n4.Display\n5.Exit\nEnter choice ");
   scanf("%d",&choice);
   switch(choice)
   {
    case 1:insert_front(&d);
	   break;
    case 2:insert_rear(&d);
	   break;
    case 3:y=delete_front(&d);
	   printf("\nDeleted value is %d ",y);
	   break;
    case 4:display(&d);
	   printf("\nDeque displayed ");
	   break;
   }
  }while(choice!=5);
 }
 getch();
}
